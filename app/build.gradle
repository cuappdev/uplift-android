plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id "com.apollographql.apollo3" version "3.8.2"
    id("com.google.devtools.ksp") // Use KSP instead of kapt for now to avoid kapt stub build error
    id("com.google.dagger.hilt.android")
    id 'org.jetbrains.kotlin.plugin.serialization' version '2.0.20'
    id("org.jetbrains.kotlin.plugin.compose") version "2.0.0"
}
def secretsPropertiesFile = rootProject.file('secrets.properties')
def secretsProperties = new Properties()
secretsProperties.load(new FileInputStream(secretsPropertiesFile))

android {
    namespace 'com.cornellappdev.uplift'
    compileSdk 35

    defaultConfig {
        applicationId "com.cornellappdev.uplift"
        minSdk 28
        targetSdk 35
        versionCode 12
        versionName "1.4-backend-fix"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }


    }

    buildTypes {
        debug {
            buildConfigField("String", "BACKEND_URL", secretsProperties['DEV_ENDPOINT'])
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
            buildConfigField("String", "BACKEND_URL", secretsProperties['PROD_ENDPOINT'])
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
        freeCompilerArgs += "-opt-in=kotlin.RequiresOptIn"
    }
    buildFeatures {
        compose true
        buildConfig = true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.14'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation 'androidx.datastore:datastore-preferences:1.1.1'
    implementation 'androidx.core:core-ktx:1.15.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.8.7'
    implementation 'androidx.activity:activity-compose:1.9.3'
    implementation "androidx.compose.ui:ui:$compose_ui_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_ui_version"
    implementation 'androidx.compose.material:material:1.7.5'
    implementation 'androidx.compose.material3:material3-android:1.3.1'
    implementation 'androidx.core:core-ktx:1.15.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_ui_version"
    implementation "io.coil-kt:coil-compose:2.2.2"
    implementation "androidx.navigation:navigation-compose:2.8.4"
    implementation "com.google.accompanist:accompanist-systemuicontroller:0.28.0"
    implementation "com.google.accompanist:accompanist-permissions:0.34.0"
    implementation "com.apollographql.apollo3:apollo-runtime:3.8.2"
    implementation 'com.valentinilk.shimmer:compose-shimmer:1.0.5'
    implementation 'com.google.android.gms:play-services-location:21.3.0'
    implementation 'androidx.core:core-splashscreen:1.0.1'
    // Dagger Hilt
    implementation("com.google.dagger:hilt-android:2.51.1")
    ksp("com.google.dagger:hilt-compiler:2.51.1")
    implementation("androidx.hilt:hilt-navigation-compose:1.2.0")

    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.7.3"

}

apollo {
    service("service") {
        packageName.set("com.cornellappdev.uplift")
    }
}
